2022-11-10 13:49:39,411 - mmcls - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.13 (default, Oct 21 2022, 23:50:54) [GCC 11.2.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 3070 Ti Laptop GPU
CUDA_HOME: /usr/local/cuda-11.1
NVCC: Cuda compilation tools, release 11.1, V11.1.105
GCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0
PyTorch: 1.13.0
PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.14.0
OpenCV: 4.6.0
MMCV: 1.7.0
MMCV Compiler: GCC 9.3
MMCV CUDA Compiler: 11.7
MMClassification: 0.24.1+HEAD
------------------------------------------------------------

2022-11-10 13:49:39,411 - mmcls - INFO - Distributed training: False
2022-11-10 13:49:39,453 - mmcls - INFO - Config:
model = dict(
    type='ImageClassifier',
    backbone=dict(type='DenseNetCifar', arch='190'),
    neck=dict(type='GlobalAveragePooling'),
    head=dict(
        type='LinearClsHead',
        num_classes=10,
        in_channels=1024,
        loss=dict(type='CrossEntropyLoss', loss_weight=1.0)))
dataset_type = 'CIFAR10'
img_norm_cfg = dict(
    mean=[125.307, 122.961, 113.8575],
    std=[51.5865, 50.847, 51.255],
    to_rgb=False)
train_pipeline = [
    dict(type='RandomCrop', size=32, padding=4),
    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
    dict(
        type='Normalize',
        mean=[125.307, 122.961, 113.8575],
        std=[51.5865, 50.847, 51.255],
        to_rgb=False),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='ToTensor', keys=['gt_label']),
    dict(type='Collect', keys=['img', 'gt_label'])
]
test_pipeline = [
    dict(
        type='Normalize',
        mean=[125.307, 122.961, 113.8575],
        std=[51.5865, 50.847, 51.255],
        to_rgb=False),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='Collect', keys=['img'])
]
data = dict(
    samples_per_gpu=128,
    workers_per_gpu=2,
    train=dict(
        type='CIFAR10',
        data_prefix='data/cifar10',
        pipeline=[
            dict(type='RandomCrop', size=32, padding=4),
            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
            dict(
                type='Normalize',
                mean=[125.307, 122.961, 113.8575],
                std=[51.5865, 50.847, 51.255],
                to_rgb=False),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='ToTensor', keys=['gt_label']),
            dict(type='Collect', keys=['img', 'gt_label'])
        ]),
    val=dict(
        type='CIFAR10',
        data_prefix='data/cifar10',
        pipeline=[
            dict(
                type='Normalize',
                mean=[125.307, 122.961, 113.8575],
                std=[51.5865, 50.847, 51.255],
                to_rgb=False),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ],
        test_mode=True),
    test=dict(
        type='CIFAR10',
        data_prefix='data/cifar10',
        pipeline=[
            dict(
                type='Normalize',
                mean=[125.307, 122.961, 113.8575],
                std=[51.5865, 50.847, 51.255],
                to_rgb=False),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ],
        test_mode=True))
optimizer = dict(type='SGD', lr=0.1, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(policy='step', step=[100, 150])
runner = dict(type='EpochBasedRunner', max_epochs=200)
checkpoint_config = dict(interval=10, max_keep_ckpts=1)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
work_dir = './work_dirs/densenet190_b128_cifar10'
gpu_ids = [0]

2022-11-10 13:49:39,454 - mmcls - INFO - Set random seed to 155173943, deterministic: False
2022-11-10 13:49:39,630 - mmcls - INFO - initialize LinearClsHead with init_cfg {'type': 'Normal', 'layer': 'Linear', 'std': 0.01}
Name of parameter - Initialization information

backbone.stem.0.weight - torch.Size([80, 3, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stem.1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stem.1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.0.norm1.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.0.norm1.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.0.conv1.weight - torch.Size([160, 80, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.0.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.0.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.0.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.1.norm1.weight - torch.Size([120]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.1.norm1.bias - torch.Size([120]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.1.conv1.weight - torch.Size([160, 120, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.1.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.1.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.1.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.2.norm1.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.2.norm1.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.2.conv1.weight - torch.Size([160, 160, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.2.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.2.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.2.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.3.norm1.weight - torch.Size([200]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.3.norm1.bias - torch.Size([200]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.3.conv1.weight - torch.Size([160, 200, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.3.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.3.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.3.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.4.norm1.weight - torch.Size([240]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.4.norm1.bias - torch.Size([240]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.4.conv1.weight - torch.Size([160, 240, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.4.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.4.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.4.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.5.norm1.weight - torch.Size([280]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.5.norm1.bias - torch.Size([280]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.5.conv1.weight - torch.Size([160, 280, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.5.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.5.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.5.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.6.norm1.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.6.norm1.bias - torch.Size([320]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.6.conv1.weight - torch.Size([160, 320, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.6.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.6.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.6.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.7.norm1.weight - torch.Size([360]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.7.norm1.bias - torch.Size([360]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.7.conv1.weight - torch.Size([160, 360, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.7.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.7.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.7.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.8.norm1.weight - torch.Size([400]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.8.norm1.bias - torch.Size([400]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.8.conv1.weight - torch.Size([160, 400, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.8.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.8.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.8.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.9.norm1.weight - torch.Size([440]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.9.norm1.bias - torch.Size([440]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.9.conv1.weight - torch.Size([160, 440, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.9.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.9.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.9.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.10.norm1.weight - torch.Size([480]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.10.norm1.bias - torch.Size([480]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.10.conv1.weight - torch.Size([160, 480, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.10.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.10.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.10.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.11.norm1.weight - torch.Size([520]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.11.norm1.bias - torch.Size([520]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.11.conv1.weight - torch.Size([160, 520, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.11.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.11.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.11.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.12.norm1.weight - torch.Size([560]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.12.norm1.bias - torch.Size([560]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.12.conv1.weight - torch.Size([160, 560, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.12.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.12.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.12.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.13.norm1.weight - torch.Size([600]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.13.norm1.bias - torch.Size([600]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.13.conv1.weight - torch.Size([160, 600, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.13.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.13.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.13.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.14.norm1.weight - torch.Size([640]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.14.norm1.bias - torch.Size([640]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.14.conv1.weight - torch.Size([160, 640, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.14.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.14.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.14.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.15.norm1.weight - torch.Size([680]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.15.norm1.bias - torch.Size([680]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.15.conv1.weight - torch.Size([160, 680, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.15.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.15.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.15.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.16.norm1.weight - torch.Size([720]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.16.norm1.bias - torch.Size([720]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.16.conv1.weight - torch.Size([160, 720, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.16.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.16.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.16.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.17.norm1.weight - torch.Size([760]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.17.norm1.bias - torch.Size([760]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.17.conv1.weight - torch.Size([160, 760, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.17.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.17.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.17.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.18.norm1.weight - torch.Size([800]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.18.norm1.bias - torch.Size([800]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.18.conv1.weight - torch.Size([160, 800, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.18.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.18.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.18.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.19.norm1.weight - torch.Size([840]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.19.norm1.bias - torch.Size([840]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.19.conv1.weight - torch.Size([160, 840, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.19.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.19.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.19.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.20.norm1.weight - torch.Size([880]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.20.norm1.bias - torch.Size([880]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.20.conv1.weight - torch.Size([160, 880, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.20.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.20.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.20.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.21.norm1.weight - torch.Size([920]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.21.norm1.bias - torch.Size([920]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.21.conv1.weight - torch.Size([160, 920, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.21.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.21.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.21.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.22.norm1.weight - torch.Size([960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.22.norm1.bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.22.conv1.weight - torch.Size([160, 960, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.22.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.22.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.22.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.23.norm1.weight - torch.Size([1000]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.23.norm1.bias - torch.Size([1000]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.23.conv1.weight - torch.Size([160, 1000, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.23.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.23.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.23.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.24.norm1.weight - torch.Size([1040]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.24.norm1.bias - torch.Size([1040]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.24.conv1.weight - torch.Size([160, 1040, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.24.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.24.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.24.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.25.norm1.weight - torch.Size([1080]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.25.norm1.bias - torch.Size([1080]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.25.conv1.weight - torch.Size([160, 1080, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.25.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.25.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.25.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.26.norm1.weight - torch.Size([1120]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.26.norm1.bias - torch.Size([1120]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.26.conv1.weight - torch.Size([160, 1120, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.26.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.26.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.26.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.27.norm1.weight - torch.Size([1160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.27.norm1.bias - torch.Size([1160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.27.conv1.weight - torch.Size([160, 1160, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.27.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.27.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.27.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.28.norm1.weight - torch.Size([1200]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.28.norm1.bias - torch.Size([1200]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.28.conv1.weight - torch.Size([160, 1200, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.28.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.28.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.28.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.29.norm1.weight - torch.Size([1240]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.29.norm1.bias - torch.Size([1240]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.29.conv1.weight - torch.Size([160, 1240, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.29.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.29.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.29.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.30.norm1.weight - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.30.norm1.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.30.conv1.weight - torch.Size([160, 1280, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.30.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.30.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.0.block.30.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.0.norm1.weight - torch.Size([660]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.0.norm1.bias - torch.Size([660]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.0.conv1.weight - torch.Size([160, 660, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.0.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.0.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.0.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.1.norm1.weight - torch.Size([700]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.1.norm1.bias - torch.Size([700]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.1.conv1.weight - torch.Size([160, 700, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.1.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.1.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.1.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.2.norm1.weight - torch.Size([740]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.2.norm1.bias - torch.Size([740]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.2.conv1.weight - torch.Size([160, 740, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.2.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.2.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.2.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.3.norm1.weight - torch.Size([780]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.3.norm1.bias - torch.Size([780]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.3.conv1.weight - torch.Size([160, 780, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.3.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.3.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.3.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.4.norm1.weight - torch.Size([820]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.4.norm1.bias - torch.Size([820]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.4.conv1.weight - torch.Size([160, 820, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.4.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.4.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.4.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.5.norm1.weight - torch.Size([860]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.5.norm1.bias - torch.Size([860]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.5.conv1.weight - torch.Size([160, 860, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.5.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.5.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.5.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.6.norm1.weight - torch.Size([900]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.6.norm1.bias - torch.Size([900]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.6.conv1.weight - torch.Size([160, 900, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.6.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.6.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.6.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.7.norm1.weight - torch.Size([940]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.7.norm1.bias - torch.Size([940]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.7.conv1.weight - torch.Size([160, 940, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.7.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.7.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.7.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.8.norm1.weight - torch.Size([980]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.8.norm1.bias - torch.Size([980]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.8.conv1.weight - torch.Size([160, 980, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.8.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.8.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.8.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.9.norm1.weight - torch.Size([1020]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.9.norm1.bias - torch.Size([1020]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.9.conv1.weight - torch.Size([160, 1020, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.9.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.9.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.9.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.10.norm1.weight - torch.Size([1060]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.10.norm1.bias - torch.Size([1060]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.10.conv1.weight - torch.Size([160, 1060, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.10.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.10.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.10.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.11.norm1.weight - torch.Size([1100]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.11.norm1.bias - torch.Size([1100]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.11.conv1.weight - torch.Size([160, 1100, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.11.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.11.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.11.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.12.norm1.weight - torch.Size([1140]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.12.norm1.bias - torch.Size([1140]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.12.conv1.weight - torch.Size([160, 1140, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.12.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.12.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.12.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.13.norm1.weight - torch.Size([1180]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.13.norm1.bias - torch.Size([1180]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.13.conv1.weight - torch.Size([160, 1180, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.13.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.13.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.13.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.14.norm1.weight - torch.Size([1220]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.14.norm1.bias - torch.Size([1220]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.14.conv1.weight - torch.Size([160, 1220, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.14.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.14.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.14.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.15.norm1.weight - torch.Size([1260]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.15.norm1.bias - torch.Size([1260]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.15.conv1.weight - torch.Size([160, 1260, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.15.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.15.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.15.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.16.norm1.weight - torch.Size([1300]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.16.norm1.bias - torch.Size([1300]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.16.conv1.weight - torch.Size([160, 1300, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.16.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.16.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.16.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.17.norm1.weight - torch.Size([1340]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.17.norm1.bias - torch.Size([1340]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.17.conv1.weight - torch.Size([160, 1340, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.17.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.17.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.17.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.18.norm1.weight - torch.Size([1380]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.18.norm1.bias - torch.Size([1380]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.18.conv1.weight - torch.Size([160, 1380, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.18.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.18.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.18.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.19.norm1.weight - torch.Size([1420]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.19.norm1.bias - torch.Size([1420]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.19.conv1.weight - torch.Size([160, 1420, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.19.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.19.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.19.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.20.norm1.weight - torch.Size([1460]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.20.norm1.bias - torch.Size([1460]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.20.conv1.weight - torch.Size([160, 1460, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.20.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.20.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.20.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.21.norm1.weight - torch.Size([1500]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.21.norm1.bias - torch.Size([1500]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.21.conv1.weight - torch.Size([160, 1500, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.21.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.21.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.21.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.22.norm1.weight - torch.Size([1540]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.22.norm1.bias - torch.Size([1540]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.22.conv1.weight - torch.Size([160, 1540, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.22.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.22.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.22.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.23.norm1.weight - torch.Size([1580]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.23.norm1.bias - torch.Size([1580]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.23.conv1.weight - torch.Size([160, 1580, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.23.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.23.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.23.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.24.norm1.weight - torch.Size([1620]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.24.norm1.bias - torch.Size([1620]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.24.conv1.weight - torch.Size([160, 1620, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.24.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.24.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.24.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.25.norm1.weight - torch.Size([1660]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.25.norm1.bias - torch.Size([1660]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.25.conv1.weight - torch.Size([160, 1660, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.25.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.25.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.25.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.26.norm1.weight - torch.Size([1700]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.26.norm1.bias - torch.Size([1700]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.26.conv1.weight - torch.Size([160, 1700, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.26.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.26.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.26.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.27.norm1.weight - torch.Size([1740]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.27.norm1.bias - torch.Size([1740]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.27.conv1.weight - torch.Size([160, 1740, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.27.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.27.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.27.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.28.norm1.weight - torch.Size([1780]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.28.norm1.bias - torch.Size([1780]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.28.conv1.weight - torch.Size([160, 1780, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.28.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.28.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.28.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.29.norm1.weight - torch.Size([1820]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.29.norm1.bias - torch.Size([1820]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.29.conv1.weight - torch.Size([160, 1820, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.29.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.29.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.29.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.30.norm1.weight - torch.Size([1860]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.30.norm1.bias - torch.Size([1860]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.30.conv1.weight - torch.Size([160, 1860, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.30.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.30.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.1.block.30.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.0.norm1.weight - torch.Size([950]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.0.norm1.bias - torch.Size([950]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.0.conv1.weight - torch.Size([160, 950, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.0.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.0.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.0.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.1.norm1.weight - torch.Size([990]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.1.norm1.bias - torch.Size([990]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.1.conv1.weight - torch.Size([160, 990, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.1.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.1.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.1.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.2.norm1.weight - torch.Size([1030]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.2.norm1.bias - torch.Size([1030]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.2.conv1.weight - torch.Size([160, 1030, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.2.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.2.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.2.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.3.norm1.weight - torch.Size([1070]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.3.norm1.bias - torch.Size([1070]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.3.conv1.weight - torch.Size([160, 1070, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.3.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.3.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.3.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.4.norm1.weight - torch.Size([1110]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.4.norm1.bias - torch.Size([1110]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.4.conv1.weight - torch.Size([160, 1110, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.4.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.4.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.4.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.5.norm1.weight - torch.Size([1150]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.5.norm1.bias - torch.Size([1150]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.5.conv1.weight - torch.Size([160, 1150, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.5.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.5.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.5.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.6.norm1.weight - torch.Size([1190]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.6.norm1.bias - torch.Size([1190]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.6.conv1.weight - torch.Size([160, 1190, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.6.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.6.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.6.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.7.norm1.weight - torch.Size([1230]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.7.norm1.bias - torch.Size([1230]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.7.conv1.weight - torch.Size([160, 1230, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.7.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.7.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.7.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.8.norm1.weight - torch.Size([1270]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.8.norm1.bias - torch.Size([1270]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.8.conv1.weight - torch.Size([160, 1270, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.8.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.8.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.8.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.9.norm1.weight - torch.Size([1310]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.9.norm1.bias - torch.Size([1310]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.9.conv1.weight - torch.Size([160, 1310, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.9.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.9.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.9.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.10.norm1.weight - torch.Size([1350]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.10.norm1.bias - torch.Size([1350]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.10.conv1.weight - torch.Size([160, 1350, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.10.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.10.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.10.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.11.norm1.weight - torch.Size([1390]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.11.norm1.bias - torch.Size([1390]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.11.conv1.weight - torch.Size([160, 1390, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.11.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.11.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.11.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.12.norm1.weight - torch.Size([1430]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.12.norm1.bias - torch.Size([1430]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.12.conv1.weight - torch.Size([160, 1430, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.12.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.12.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.12.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.13.norm1.weight - torch.Size([1470]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.13.norm1.bias - torch.Size([1470]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.13.conv1.weight - torch.Size([160, 1470, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.13.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.13.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.13.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.14.norm1.weight - torch.Size([1510]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.14.norm1.bias - torch.Size([1510]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.14.conv1.weight - torch.Size([160, 1510, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.14.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.14.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.14.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.15.norm1.weight - torch.Size([1550]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.15.norm1.bias - torch.Size([1550]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.15.conv1.weight - torch.Size([160, 1550, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.15.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.15.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.15.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.16.norm1.weight - torch.Size([1590]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.16.norm1.bias - torch.Size([1590]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.16.conv1.weight - torch.Size([160, 1590, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.16.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.16.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.16.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.17.norm1.weight - torch.Size([1630]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.17.norm1.bias - torch.Size([1630]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.17.conv1.weight - torch.Size([160, 1630, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.17.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.17.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.17.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.18.norm1.weight - torch.Size([1670]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.18.norm1.bias - torch.Size([1670]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.18.conv1.weight - torch.Size([160, 1670, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.18.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.18.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.18.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.19.norm1.weight - torch.Size([1710]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.19.norm1.bias - torch.Size([1710]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.19.conv1.weight - torch.Size([160, 1710, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.19.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.19.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.19.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.20.norm1.weight - torch.Size([1750]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.20.norm1.bias - torch.Size([1750]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.20.conv1.weight - torch.Size([160, 1750, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.20.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.20.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.20.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.21.norm1.weight - torch.Size([1790]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.21.norm1.bias - torch.Size([1790]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.21.conv1.weight - torch.Size([160, 1790, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.21.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.21.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.21.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.22.norm1.weight - torch.Size([1830]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.22.norm1.bias - torch.Size([1830]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.22.conv1.weight - torch.Size([160, 1830, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.22.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.22.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.22.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.23.norm1.weight - torch.Size([1870]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.23.norm1.bias - torch.Size([1870]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.23.conv1.weight - torch.Size([160, 1870, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.23.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.23.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.23.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.24.norm1.weight - torch.Size([1910]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.24.norm1.bias - torch.Size([1910]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.24.conv1.weight - torch.Size([160, 1910, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.24.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.24.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.24.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.25.norm1.weight - torch.Size([1950]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.25.norm1.bias - torch.Size([1950]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.25.conv1.weight - torch.Size([160, 1950, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.25.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.25.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.25.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.26.norm1.weight - torch.Size([1990]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.26.norm1.bias - torch.Size([1990]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.26.conv1.weight - torch.Size([160, 1990, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.26.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.26.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.26.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.27.norm1.weight - torch.Size([2030]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.27.norm1.bias - torch.Size([2030]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.27.conv1.weight - torch.Size([160, 2030, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.27.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.27.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.27.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.28.norm1.weight - torch.Size([2070]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.28.norm1.bias - torch.Size([2070]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.28.conv1.weight - torch.Size([160, 2070, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.28.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.28.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.28.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.29.norm1.weight - torch.Size([2110]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.29.norm1.bias - torch.Size([2110]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.29.conv1.weight - torch.Size([160, 2110, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.29.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.29.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.29.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.30.norm1.weight - torch.Size([2150]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.30.norm1.bias - torch.Size([2150]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.30.conv1.weight - torch.Size([160, 2150, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.30.norm2.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.30.norm2.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.stages.2.block.30.conv2.weight - torch.Size([40, 160, 3, 3]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.transitions.0.norm.weight - torch.Size([1320]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.transitions.0.norm.bias - torch.Size([1320]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.transitions.0.conv.weight - torch.Size([660, 1320, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.transitions.1.norm.weight - torch.Size([1900]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.transitions.1.norm.bias - torch.Size([1900]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.transitions.1.conv.weight - torch.Size([950, 1900, 1, 1]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.transitions.2.0.weight - torch.Size([2190]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.transitions.2.0.bias - torch.Size([2190]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

head.fc.weight - torch.Size([10, 1024]): 
NormalInit: mean=0, std=0.01, bias=0 

head.fc.bias - torch.Size([10]): 
NormalInit: mean=0, std=0.01, bias=0 
2022-11-10 13:49:42,423 - mmcls - INFO - Start running, host: aoyuli@LAY-LAPTOP, work_dir: /home/aoyuli/Project/mmdl/work_dirs/densenet190_b128_cifar10
2022-11-10 13:49:42,424 - mmcls - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2022-11-10 13:49:42,424 - mmcls - INFO - workflow: [('train', 1)], max: 200 epochs
2022-11-10 13:49:42,424 - mmcls - INFO - Checkpoints will be saved to /home/aoyuli/Project/mmdl/work_dirs/densenet190_b128_cifar10 by HardDiskBackend.
